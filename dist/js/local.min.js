var FormUpdate=React.createClass({displayName:"FormUpdate",propTypes:{value:React.PropTypes.object.isRequired,onChange:React.PropTypes.func.isRequired,onSubmit:React.PropTypes.func.isRequired},render:function(){var e=this.props.value.errors||{};return React.createElement("form",{onSubmit:this.onSubmit},React.createElement("div",{className:e.description?"form-group has-error":"form-group"},React.createElement("label",{className:"control-label",htmlFor:"description"},"Description"),React.createElement("input",{"aria-describedby":"description-error",className:"form-control",id:"description",onChange:this.onDescriptionChange,placeholder:"Description",value:this.props.value.description,type:"text"}),React.createElement("span",{className:"help-block",id:"description-error"},e.description?e.description:"")),React.createElement("button",{className:"btn btn-default",type:"submit"},"Save"))},onDescriptionChange:function(e){this.props.onChange(Object.assign({},this.props.value,{description:e.target.value}))},onSubmit:function(e){e.preventDefault(),this.props.onSubmit()}}),Modal=React.createClass({displayName:"Modal",propTypes:{id:React.PropTypes.number.isRequired,label:React.PropTypes.string.isRequired,name:React.PropTypes.string.isRequired,modal:React.PropTypes.number.isRequired,onClick:React.PropTypes.func},render:function(){var e=this.props.onClick?React.createElement("button",{"aria-label":"Close",className:"close",onClick:this.props.onClick,type:"button"},React.createElement("span",{"aria-hidden":"true"},"Ã—")):null,t="modal-"+this.props.name+"-label";return React.createElement("div",{"aria-labelledby":t,className:"modal fade in",id:"modal-"+this.props.name,role:"dialog",style:{display:this.props.id==this.props.modal?"block":"none"},tabIndex:"-1"},React.createElement("div",{className:"modal-dialog modal-sm",role:"document"},React.createElement("div",{className:"modal-content"},React.createElement("div",{className:"modal-header"},e,React.createElement("strong",{id:t},this.props.label)),React.createElement("div",{className:"modal-body"},this.props.children))))}}),PositionItem=React.createClass({displayName:"PositionItem",render:function(){return React.createElement("a",{className:"list-group-item",href:"#",onClick:this.props.onClick},React.createElement("p",{className:"list-group-item-text"},React.createElement("span",{"aria-hidden":"true",className:"glyphicon glyphicon-map-marker"})," ",React.createElement("strong",null,this.props.latitude,", ",this.props.longitude)),React.createElement("p",{className:"list-group-item-text"},React.createElement("span",{"aria-hidden":"true",className:"glyphicon glyphicon-time"})," ",this.props.timestamp),React.createElement("p",{className:""==this.props.description?"hidden":"list-group-item-text"},React.createElement("span",{"aria-hidden":"true",className:"glyphicon glyphicon-comment"})," ",this.props.description))}}),MODAL={NONE:0,CONTEXT:1,REMOVE:2,UPDATE:3},POSITION_TEMPLATE=Object.assign({},{id:0,description:"",latitude:0,longitude:0,timestamp:0}),GeoLog=React.createClass({displayName:"GeoLog",propTypes:{onChange:React.PropTypes.func,onClick:React.PropTypes.func,onSubmit:React.PropTypes.func},getInitialState:function(){return{modal:MODAL.NONE,id:0,position:POSITION_TEMPLATE,positions:[]}},componentDidMount:function(){var e=parseInt(localStorage.getItem("id")||0),t=JSON.parse(localStorage.getItem("positions"))||[];this.setState({id:e,positions:t})},render:function(){var e=[];return _.orderBy(this.state.positions,["timestamp"],["desc"]).forEach(function(t){e.push(React.createElement(PositionItem,{key:t.id,description:t.description,latitude:t.latitude,longitude:t.longitude,timestamp:t.timestamp,onClick:this.modalOpen.bind(this,MODAL.CONTEXT,t.id)}))},this),React.createElement("div",null,React.createElement("div",{className:"container"},React.createElement("div",{className:"page-header"},React.createElement("h1",null,"GeoLog")),React.createElement("button",{className:"btn btn-lg btn-success btn-block",onClick:this.addPosition},"Add position"),React.createElement("hr",null),React.createElement("div",{className:"list-group"},e)),React.createElement(Modal,{id:MODAL.CONTEXT,label:"What do you want to du?",modal:this.state.modal,name:"context",onClick:this.modalClose},React.createElement("button",{className:"btn btn-info btn-block",type:"button",onClick:this.modalOpen.bind(this,MODAL.UPDATE,null)},""==this.state.position.description?"Add":"Update"," description"),React.createElement("button",{className:"btn btn-danger btn-block",type:"button",onClick:this.modalOpen.bind(this,MODAL.REMOVE,null)},"Remove position"),React.createElement("button",{className:"btn btn-default btn-block",type:"button",onClick:this.modalClose},"Cancel")),React.createElement(Modal,{id:MODAL.REMOVE,label:"Remove position",modal:this.state.modal,name:"remoe",onClick:this.modalClose},React.createElement("p",null,"Are you sure you want to remove this position?"),React.createElement("button",{className:"btn btn-danger btn-block",type:"button",onClick:this.removePosition},"Yes"),React.createElement("button",{className:"btn btn-default btn-block",type:"button",onClick:this.modalClose},"No")),React.createElement(Modal,{id:MODAL.UPDATE,label:"Description",modal:this.state.modal,name:"update",onClick:this.modalClose},React.createElement(FormUpdate,{onChange:this.onPositionChange,onSubmit:this.onPositionUpdate,value:this.state.position})),React.createElement("div",{className:this.state.modal==MODAL.NONE?"hidden":"modal-backdrop fade in"}))},onPositionChange:function(e){this.setState({position:e})},onPositionUpdate:function(){var e=Object.assign({},this.state.position,{errors:{}});if(e.description.length>50&&(e.errors.description=["Your description is too long."]),0===Object.keys(e.errors).length){delete e.errors;var t=this.state.positions,i=_.findIndex(t,["id",e.id]);i!=-1&&(t[i]=e,this.setState({positions:t},this.updateStorage),this.modalClose())}else this.setState({position:e})},modalOpen:function(e,t,i){i.preventDefault();var o=_.find(this.state.positions,["id",t]);this.setState(void 0!==o?{modal:e,position:o}:{modal:e})},modalClose:function(e){e&&e.preventDefault(),this.setState({modal:MODAL.NONE,position:Object.assign({},POSITION_TEMPLATE)})},updateStorage:function(){localStorage.setItem("id",this.state.id),localStorage.setItem("positions",JSON.stringify(this.state.positions))},removePosition:function(){var e=this.state.positions,t=_.findIndex(e,["id",this.state.position.id]);t!=-1&&(e.splice(t,1),this.setState({positions:e},this.updateStorage)),this.modalClose()},addPosition:function(e){navigator.geolocation.getCurrentPosition(this.getPositionSuccess,this.getPositionError)},getPositionSuccess:function(e){var t=this.state.id+1,e=Object.assign({},this.state.position,{id:t,latitude:e.coords.latitude,longitude:e.coords.longitude,timestamp:e.timestamp}),i=this.state.positions;i.push(e),this.setState({id:t,positions:i},this.updateStorage)},getPositionError:function(e){console.log("code: %s, message: %s",e.code,e.message)}});